Script started on Thu 22 Feb 2018 08:58:10 PM EST
cbda5@taylor:~/214/labs/04$ c cat LogTable.jacva  a  ca  ba  c va
/* LogTable.java displays a table of logarithms.
 *
 * Input: start, stop and increment, three doubles.
 * PRE: start < stop && increment > 0.
 * Output: A table of logarithms from start to stop,
 *         with increment as the step value.
 * Begun by: Nelesen, for CS 214 at Calvin College.
 * Completed by:Bryce Allen
 ********************************************************/
import java.util.Scanner; 		// Get input

class LogTable{
  public static void main(String[] args){
    Scanner keyboard = new Scanner(System.in);
    System.out.println("To display a table of logarithms,");
    System.out.println("enter the start, stop and increment values: ");
    double start, stop, increment;
    start = keyboard.nextDouble();
    stop = keyboard.nextDouble();
    increment = keyboard.nextDouble();

    double logarithm = 0.0;
    double count = start;
    while(count <= stop){
	logarithm = Math.log10(count);
	System.out.println("The Logarithm of " + count + " is " + logarithm);
	count += increment;
    }
  }
}

bda5@taylor:~/214/labs/04$ javac -deprecation LogTable.java
bda5@taylor:~/214/labs/04$ java LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
1
10
.5
The Logarithm of 1.0 is 0.0
The Logarithm of 1.5 is 0.17609125905568124
The Logarithm of 2.0 is 0.3010299956639812
The Logarithm of 2.5 is 0.3979400086720376
The Logarithm of 3.0 is 0.47712125471966244
The Logarithm of 3.5 is 0.5440680443502757
The Logarithm of 4.0 is 0.6020599913279624
The Logarithm of 4.5 is 0.6532125137753437
The Logarithm of 5.0 is 0.6989700043360189
The Logarithm of 5.5 is 0.7403626894942439
The Logarithm of 6.0 is 0.7781512503836436
The Logarithm of 6.5 is 0.8129133566428556
The Logarithm of 7.0 is 0.8450980400142568
The Logarithm of 7.5 is 0.8750612633917001
The Logarithm of 8.0 is 0.9030899869919435
The Logarithm of 8.5 is 0.9294189257142927
The Logarithm of 9.0 is 0.9542425094393249
The Logarithm of 9.5 is 0.9777236052888477
The Logarithm of 10.0 is 1.0
bda5@taylor:~/214/labs/04$ cat log       exit

Script done on Thu 22 Feb 2018 08:59:05 PM EST
Script started on Thu 22 Feb 2018 08:59:23 PM EST
bda5@taylor:~/214/labs/04$ cat ll og_table.adb
-- log_table.adb computes a table of logarithms.
--
-- Input: start, stop, increment, three reals.
-- Precondition: increment is positive.
-- Output: A table of logarithms beginning with log(start),
--         ending with log(stop), with intervals of increment.
--
-- Begun by: Prof. Adams, for CS 214 at Calvin College.
-- Completed by: Bryce Allen
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;

procedure log_table is

   Start, Stop, Increment, Count : Float;

begin                                           -- Prompt for input
   Put_Line("To print a table of logarithms,");
   Put(" enter the start, stop, and increment values: ");
   Get(Start); Get(Stop); Get(Increment);
   
   Count:=Start;
   loop
     exit when (Count >= Stop);
     Put("The log of ");
     Put(Count);
     Put(" is ");
     Put(log(Count,Float(10)));
     Count := Count+Increment;
   end loop;
end log_table;

bda5@taylor:~/214/labs/04$ gnatmake log_table.adb
gcc-5 -c log_table.adb
gnatbind-5 -x log_table.ali
gnatlink-5 log_table.ali
bda5@taylor:~/214/labs/04$ ./log_table
To print a table of logarithms,
 enter the start, stop, and increment values: 1
10
.5
The log of  1.00000E+00 is  0.00000E+00The log of  1.50000E+00 is  1.76091E-01The log of  2.00000E+00 is  3.01030E-01The log of  2.50000E+00 is  3.97940E-01The log of  3.00000E+00 is  4.77121E-01The log of  3.50000E+00 is  5.44068E-01The log of  4.00000E+00 is  6.02060E-01The log of  4.50000E+00 is  6.53212E-01The log of  5.00000E+00 is  6.98970E-01The log of  5.50000E+00 is  7.40363E-01The log of  6.00000E+00 is  7.78151E-01The log of  6.50000E+00 is  8.12913E-01The log of  7.00000E+00 is  8.45098E-01The log of  7.50000E+00 is  8.75061E-01The log of  8.00000E+00 is  9.03090E-01The log of  8.50000E+00 is  9.29419E-01The log of  9.00000E+00 is  9.54243E-01The log of  9.50000E+00 is  9.77724E-01
bda5@taylor:~/214/labs/04$ exit

Script done on Thu 22 Feb 2018 08:59:55 PM EST
;; This buffer is for notes you don't want to save, and for Lisp evaluation.
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file's own buffer.

;;; logTable.el displays a table of logarithms.
;;;
;;; Input: start, stop and increment, three reals.
;;; PRE: start < stop and increment > 0.
;;; Output: A table of logarithms from start to stop,
;;;          with interval of increment.
;;;
;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;; Completed by: Bryce Allen
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the actual table of logs. ;;;
;;; Receive: start and stop, the limit values for the table;          ;;;
;;;             increment, the step value for the table;              ;;;
;;;             buf, the buffer in which to display the table.        ;;;
;;; Output: The table of logs from start to stop, by increment.       ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun displayLogTable (start stop increment buf)
   (if(<= start stop)(progn (princ "The log of " buf)
			  (princ start buf)
			  (princ " is " buf)
			  (princ (log10 start) buf)
		  	  (terpri buf)
			  (displayLogTable (+ start increment) stop increment buf))))


displayLogTable


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; main is a 'driver' for displayLogTable()                      ;;;
;;; Input: start, stop and increment.                          ;;;
;;; Output: The table of logs from start to stop by increment  ;;;
;;;          in a buffer named 'logTable.out'.                 ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun main (start stop increment)
  "print a table of logarithms"
   (interactive "nEnter starting value: \nnEnter stopping value: \nnEnter increment value: ")
   (if (get-buffer "log_table.out")
       (kill-buffer "log_table.out"))
   (setq buf (switch-to-buffer-other-window "log_table.out"))
   (displayLogTable start stop increment buf))

main
(main 1 10 .5)
nil



The log of 1 is 0.0
The log of 1.5 is 0.17609125905568124
The log of 2.0 is 0.3010299956639812
The log of 2.5 is 0.3979400086720376
The log of 3.0 is 0.47712125471966244
The log of 3.5 is 0.5440680443502757
The log of 4.0 is 0.6020599913279624
The log of 4.5 is 0.6532125137753437
The log of 5.0 is 0.6989700043360189
The log of 5.5 is 0.7403626894942439
The log of 6.0 is 0.7781512503836436
The log of 6.5 is 0.8129133566428556
The log of 7.0 is 0.8450980400142568
The log of 7.5 is 0.8750612633917001
The log of 8.0 is 0.9030899869919435
The log of 8.5 is 0.9294189257142927
The log of 9.0 is 0.9542425094393249
The log of 9.5 is 0.9777236052888477
The log of 10.0 is 1.0
#! /usr/bin/ruby
# logTable.rb displays a table of logarithms
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: Bryce Allen
#
# Input:  The start, stop and increment values
# Precondition: The start value is less than the stop value, 
#     and the increment is greater than 0
# Output: A table of logarithms from start to stop, with increment
#     as the step value


if __FILE__ == $0
   print "Enter the start value: "
   start = gets.chomp.to_f
   print "Enter the stop value: "
   stop = gets.chomp.to_f
   print "Enter the increment value: "
   increment = gets.chomp.to_f

   while start <= stop
     print "Logarithm for " << start.to_s << " is: "
     puts Math.log10(start)
     start = start+increment
   end
end

